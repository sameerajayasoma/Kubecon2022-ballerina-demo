import ballerina/http;

configurable string taskGroupServiceUrl = ?;
configurable string taskServiceUrl = ?;

type Group record {
    int id;
    string title;
    string description;
    string createdAt;
    string updatedAt;
};

type Task record {
    int id;
    string title;
    string description;
    int groupId;
    string status;
    string createdAt;
    string updatedAt;
};

public type TaskRequest record {
    string title;
    string description;
    int groupId?;
    string status;
    string createdAt;
    string updatedAt;
};

service / on new http:Listener(8090) {
    resource function get tasks(string? groupTitle) returns Task[]|error {
        return error("Not implemented");
    }

    resource function get tasks/[string taskId]() returns Task[]|error {
        return error("Not implemented");
    }

    resource function post tasks(@http:Payload TaskRequest taskReq) returns Task|error {
        return error("Not implemented");
    }

    resource function delete tasks/[string taskId]() returns Task[]|error {
        return error("Not implemented");
    }
}
